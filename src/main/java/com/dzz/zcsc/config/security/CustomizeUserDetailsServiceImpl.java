package com.dzz.zcsc.config.security;import lombok.extern.slf4j.Slf4j;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.core.userdetails.UsernameNotFoundException;import org.springframework.stereotype.Component;import org.springframework.util.StringUtils;/** * 用户数据授权服务 * @author dzz * @since  2017年04月20 上午9:52 * @version  1.0.0 */@Component@Slf4jpublic class CustomizeUserDetailsServiceImpl implements UserDetailsService {    /**     * 用户认证     * @param userName 用户名     * @return 用户实体     * @throws UsernameNotFoundException 未找到相关用户异常     */    @Override    public CustomizeUser loadUserByUsername(String userName) throws UsernameNotFoundException {        if (StringUtils.isEmpty(userName)) {            throw new UsernameNotFoundException("用户名不能为空");        }//        ResponseBzn<HealthAdminUserDetailBO> responseBzn = healthAdminUserService.selectByAccount(userName);////        if (responseBzn.checkFail() || null == responseBzn.getData()) {//            return null;//        }////        Set<GrantedAuthority> authorities = new HashSet<>();//        CustomizeUser user = new CustomizeUser(userName, responseBzn.getData().getPassword(), true,//                true, true, true, authorities);//        user.setUserId(responseBzn.getData().getUserId());//        user.setStatus(Integer.valueOf(responseBzn.getData().getStatus()));//        user.setUserAccount(responseBzn.getData().getAccount());//        user.setDepartmentId(responseBzn.getData().getDepartmentId());//        user.setRoleType(responseBzn.getData().getRoleType());        return null;    }}